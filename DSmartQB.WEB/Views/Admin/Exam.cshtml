
@{
    ViewBag.Title = "Exam";
}
<style>
    .am-pm > .btn {
        margin-top: -16px;
    }
</style>
<div ng-app="myApp" ng-controller="myCtrl" ng-cloak>
    <div class="page-header">
        <h1 class="page-title">
            Exam
        </h1>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="dropdown">
                        <button type="button" class="btn btn-primary btn-spacey dropdown-toggle" data-toggle="dropdown">
                            Add Exam
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href='@Url.Action("CreateExam")'><i class="dropdown-icon fe fe-edit"></i> Mannual</a>
                        </div>

                    </div>
                    <div class="lds-hourglass" style="margin-left: 35px;" ng-if="loading"></div>
                </div>
                <div class="card-body o-auto">

                    <table class="table table-hover table-outline table-vcenter text-nowrap card-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th class="text-center">Marks</th>
                                <th class="text-center">Group</th>
                                <th class="text-center">No.Questions</th>
                                <th class="text-center"><i class="icon-settings"></i></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="ex in Exams">
                                <td>
                                    <div>{{ex.Name}}</div>
                                    <div class="small text-muted">
                                        <span ng-class="{'badge badge-success' : ex.Type == 'Mannual','badge badge-primary' : ex.Type == 'Automatic'}">{{ex.Type}}</span>
                                    </div>
                                </td>
                                <th class="text-center">{{ex.Mark}}</th>
                                <td class="text-center">
                                    {{ex.Group}}
                                </td>
                                <td class="text-center">
                                    {{ex.NoOfQuestions}}
                                </td>
                                <td class="text-center">
                                    <div class="item-action dropdown">
                                        <a href="javascript:void(0)" data-toggle="dropdown" class="icon"><i class="fe fe-more-vertical"></i></a>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a href="javascript:void(0)" class="dropdown-item" ng-click="loadpreveiw(ex)"><i class="dropdown-icon fe fe-eye"></i> Preview </a>
                                            <a href="javascript:void(0)" class="dropdown-item" ng-if="!ex.Published" ng-click="loadUpdate(ex)" data-toggle="modal" data-target="#settingModal"><i class="dropdown-icon fe fe-edit"></i> Edit Setting</a>
                                            <a href="javascript:void(0)" class="dropdown-item" ng-click="deleteExam(ex)"><i class="dropdown-icon fe fe-trash"></i> Delete </a>
                                            <a href="javascript:void(0)" class="dropdown-item" ng-if="ex.Published" ng-click="onlineStudents(ex)"><i class="dropdown-icon fe fe-user-check"></i> Online Students </a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <ul uib-pagination total-items="TotalRows" class="d-flex justify-content-center" items-per-page="itemsPerPage" ng-model="currentPage" boundary-links="true" num-pages="numPages" ng-change="pageChanged()"></ul>



                </div>
            </div>

        </div>
    </div>


    <div class="modal fade" id="settingModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        Update <span class="text-indigo">[{{exam.Name}}]</span>

                    </h5>

                    <div class="lds-hourglass" style="margin-left: 35px;" ng-if="loadingExam"></div>
                </div>
                <div class="modal-body">
                    <form name="settingFrm" novalidate>
                        <div class="row">
                            <div class="col-sm-6 col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Exam</label>
                                    <input type="text" autocomplete="off" class="form-control" placeholder="Exam" name="name" ng-model="exam.Name" required>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Duration (in Mins)</label>
                                    <input type="number" class="form-control" placeholder="Duration" name="duration" ng-model="exam.Duration" min="60" required>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6">

                                <div class="form-group">
                                    <label class="form-label">Start Date</label>


                                    <div class="row gutters-xs" ng-if="tab1">
                                        <div class="col">
                                            <input type="text" class="form-control" placeholder="start date" ng-model="exam.StartDate" readonly>
                                        </div>
                                        <span class="col-auto">
                                            <button class="btn btn-secondary" type="button" ng-click="refresh()"><i class="fe fe-refresh-ccw"></i></button>
                                        </span>
                                    </div>



                                    <p class="input-group" ng-if="!tab1">
                                        <input type="text" class="form-control" datetime-picker="yyyy-MM-dd HH:mm" datepicker-options="dateOptions" ng-model="exam.StartDate" is-open="isOpen" required readonly />
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-default" ng-click="openCalendar($event, prop)"><i class="fe fe-calendar"></i></button>
                                        </span>
                                    </p>

                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Group</label>
                                    <select class="form-control" ng-model="exam.GroupId" required>
                                        <option ng-repeat="grp in groups" value="{{grp.Id}}">{{grp.Name}}</option>
                                    </select>
                                </div>

                            </div>
                            <div class="col-sm-6 col-md-6">

                                <div class="form-group">
                                    <label class="form-label">Marks</label>
                                    <input type="number" class="form-control" placeholder="Marks" name="duration" ng-model="exam.Mark" min="10" required>
                                </div>
                            </div>
                        </div>


                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-dark" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" ng-disabled="settingFrm.$invalid" ng-click="saveCreate(exam)">Save changes</button>
                </div>
            </div>
        </div>
    </div>


</div>

<script>

    var user = JSON.parse(sessionStorage.user);
    var apiurl = '@System.Configuration.ConfigurationManager.AppSettings["apiurl"]';
    var config = {
        headers: {
            'contentType': 'application/json;charset=utf-8',
            'authorization': 'bearer ' + user.access_token
        }
    }

    var app = angular.module("myApp", ['ui.bootstrap','ui.bootstrap.datetimepicker']);
    app.controller('myCtrl', function ($scope, $http,$window) {
        $scope.sub = {};
        $scope.itemsPerPage = 5;
        $scope.currentPage = 1;
        $scope.TotalRows = 0;
        $scope.Exams = [];
        $scope.loading = false;

        $scope.loadingExam = false;
        $scope.dateOptions = {
            minDate: new Date()
        };


        $scope.exam = {};

        $scope.refresh = function () {
            $scope.tab1 = false;
        }

        $scope.lista = function (curr) {

            $scope.loading = true;

            var reqList = {
                method: 'Get',
                url: apiurl + 'ListExams/' + curr,
                headers: config.headers
            }

            $http(reqList).then(function (res) {
                $scope.loading = false;
                $scope.Exams = res.data.Exams;
                $scope.TotalRows = res.data.TotalRows;
                console.log(res.data)
            }, function (err) {
                console.log(err)
            });
        }

        $scope.lista(1);

        $scope.saveCreate = function (exam) {

            console.log(exam)

            var ex = new Object();
            ex.Id = exam.Id;
            ex.Name = exam.Name;
            ex.GroupId = exam.GroupId;
            ex.Duration = exam.Duration;
            ex.Mark = exam.Mark;
            ex.StartDate = exam.StartDate;

            var req = {
                method: 'POST',
                url: apiurl + "UpdateSetting",
                headers: config.headers,
                data: ex
            }

            $http(req).then(function (res) {
                toastr.success(res.data, "DSmartQB.")
                $scope.lista(1);
            }, function (err) {
                console.log(err)
            });


        }


        $scope.deleteExam = function (item) {
            if (confirm('Are you sure .. ?')) {

                var req = {
                    method: 'Delete',
                    url: apiurl + "DeleteExam/" + item.Id,
                    headers: config.headers
                }

                $http(req).then(function (res) {
                    toastr.success(res.data,"DSmartQB.")
                    $scope.lista(1);
                }, function (err) {
                    console.log(err)
                });

            }
        }


        $scope.pageChanged = function () {
            $scope.lista($scope.currentPage);
        }



        $scope.loadpreveiw = function (exam) {

            sessionStorage.examId = JSON.stringify(exam.Id);
             $window.location.href = '@Url.Action("Preview")';

        }

        $scope.onlineStudents = function (ex) {

            sessionStorage.onlineStudentsForExam = JSON.stringify(ex);
            $window.location.href = '@Url.Action("OnlineStudents")';
        }

        $scope.loadUpdate = function (ex) {

            $scope.loadingExam = true;
            $scope.tab1 = true;

            var reqList = {
                method: 'Get',
                url: apiurl + 'LoadSpecifiedExam/' + ex.Id,
                headers: config.headers
            }

            $http(reqList).then(function (res) {
                $scope.exam = res.data;
                $scope.loadingExam = false;
                console.log($scope.exam)

            }, function (err) {
                console.log(err)
            });

        }

        $scope.teachers = [];

        $scope.loadTeachers = function () {

            var reqList = {
                method: 'Get',
                url: apiurl + 'ListTeachers',
                headers: config.headers
            }

            $http(reqList).then(function (res) {
                $scope.teachers = res.data;
            }, function (err) {
                console.log(err)
            });

        }

        $scope.loadTeachers();

        $scope.loadGroups = function () {

            var reqList = {
                method: 'Get',
                url: apiurl + 'LoadGroups',
                headers: config.headers
            }

            $http(reqList).then(function (res) {
                $scope.groups = res.data;
            }, function (err) {
                console.log(err)
            });

        }

        $scope.loadGroups();


        $scope.isOpen = false;

        $scope.openCalendar = function (e) {
            e.preventDefault();
            e.stopPropagation();

            $scope.isOpen = true;
        };

    });


</script>

